A Java-based implementation of an L-System generator.




An example L-System "program":

AXIOM: F
F -> FF[[-FFF@]++FF@]


Supported instructions:


F	  move pen forward and draw a line
f	  move pen forward w/o drawing a line
+	  turn left by default degrees
-	  turn right by default degrees
[	  push current state (x/y position, angle) on to the context stack
]	  pop context from stack and discard/replace current state (x/y postion, angle)
@	  draw a 'dot' with a specified radius (default is 1/2 current line length) 

To build the Elses interpreter using Ant:

    ant clean build
    
    
To run from the build directory:

java -cp dist org.hccp.elses.Elses <options> <lsys-program-input-file> <output-file>


Options:




--angle,-a ANGLE			the angle to increment/decrement when interpreting '+' or '-' commands.

--help,-h			prints this message.

--iterations,-i ITERATIONS			the number of rule-application iterations.

--line-length,-l LINE_LENGTH			the length of each pen move 'F'.

--x-position,-x INITIAL_X_POSITION			the initial x position from which to begin drawing

--y-position,-y INITIAL_Y_POSITION			the initial y position from which to begin drawing

--dot-radius,-r DOT_RADIUS			the radius of the circle drawn by a '@' command




Example:

java -cp dist org.hccp.elses.Elses -i 2 -a 10 -r 5 -l 25 -x 150 -y 50 samples/test-003.txt /tmp/lsys-plot.svg




Credits:

A bunch of the parsing code and structure is derived from Lox and Robert Nystrom's wonderful book "Crafting Interpreters".
